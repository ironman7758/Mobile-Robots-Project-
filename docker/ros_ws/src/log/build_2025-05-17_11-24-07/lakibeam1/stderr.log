[33mCMake Warning (dev) at /usr/lib/x86_64-linux-gnu/cmake/pcl/Modules/FindFLANN.cmake:45 (find_package):
  Policy CMP0144 is not set: find_package uses upper-case <PACKAGENAME>_ROOT
  variables.  Run "cmake --help-policy CMP0144" for policy details.  Use the
  cmake_policy command to set the policy and suppress this warning.

  CMake variable FLANN_ROOT is set to:

    /usr

  For compatibility, find_package is ignoring the variable, but code in a
  .cmake module might still use it.
Call Stack (most recent call first):
  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:261 (find_package)
  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:306 (find_flann)
  /usr/lib/x86_64-linux-gnu/cmake/pcl/PCLConfig.cmake:570 (find_external_library)
  /opt/ros/jazzy/share/pcl_conversions/cmake/ament_cmake_export_dependencies-extras.cmake:21 (find_package)
  /opt/ros/jazzy/share/pcl_conversions/cmake/pcl_conversionsConfig.cmake:41 (include)
  CMakeLists.txt:10 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
In file included from [01m[K/workspace/ros_ws/src/lakibeam1/src/remote.cpp:4[m[K:
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:102:19:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Ktemplate<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator[m[Kâ€™ is deprecated [[01;35m[K-Wdeprecated-declarations[m[K]
  102 |     : public std::[01;35m[Kiterator[m[K<std::random_access_iterator_tag
      |                   [01;35m[K^~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/13/bits/stl_construct.h:61[m[K,
                 from [01m[K/usr/include/c++/13/bits/stl_tempbuf.h:61[m[K,
                 from [01m[K/usr/include/c++/13/memory:66[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:169[m[K,
                 from [01m[K/workspace/ros_ws/src/lakibeam1/src/remote.cpp:2[m[K:
[01m[K/usr/include/c++/13/bits/stl_iterator_base_types.h:127:34:[m[K [01;36m[Knote: [m[Kdeclared here
  127 |     struct _GLIBCXX17_DEPRECATED [01;36m[Kiterator[m[K
      |                                  [01;36m[K^~~~~~~~[m[K
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:110:18:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Ktemplate<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator[m[Kâ€™ is deprecated [[01;35m[K-Wdeprecated-declarations[m[K]
  110 |     typedef std::[01;35m[Kiterator[m[K<std::random_access_iterator_tag,ValueType> BaseType;
      |                  [01;35m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/bits/stl_iterator_base_types.h:127:34:[m[K [01;36m[Knote: [m[Kdeclared here
  127 |     struct _GLIBCXX17_DEPRECATED [01;36m[Kiterator[m[K
      |                                  [01;36m[K^~~~~~~~[m[K
[01m[K/workspace/ros_ws/src/lakibeam1/src/remote.cpp:[m[K In function â€˜[01m[Ksize_t[01;32m[K dummy_callback[m[K(void*, size_t, size_t, void*)[m[Kâ€™:
[01m[K/workspace/ros_ws/src/lakibeam1/src/remote.cpp:16:36:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kbuffer[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   16 | static size_t dummy_callback([01;35m[Kvoid *buffer[m[K, size_t size, size_t nmemb, void *userp)
      |                              [01;35m[K~~~~~~^~~~~~[m[K
[01m[K/workspace/ros_ws/src/lakibeam1/src/remote.cpp:16:77:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kuserp[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   16 | static size_t dummy_callback(void *buffer, size_t size, size_t nmemb, [01;35m[Kvoid *userp[m[K)
      |                                                                       [01;35m[K~~~~~~^~~~~[m[K
/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h: In instantiation of â€˜[01m[Kvoid rapidjson::GenericValue<Encoding, Allocator>::[01;32m[KSetObjectRaw[m[K(Member*, rapidjson::SizeType, Allocator&) [35m[K[with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; Member = rapidjson::GenericMember<rapidjson::UTF8<>, rapidjson::MemoryPoolAllocator<> >; rapidjson::SizeType = unsigned int][m[K[m[Kâ€™:
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2363:55:[m[K   required from â€˜[01m[Kbool rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KEndObject[m[K(rapidjson::SizeType) [35m[K[with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; rapidjson::SizeType = unsigned int][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/reader.h:1736:40:[m[K   required from â€˜[01m[Krapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParsingState rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::[01;32m[KTransit[m[K(IterativeParsingState, Token, IterativeParsingState, InputStream&, Handler&) [35m[K[with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/reader.h:1832:58:[m[K   required from â€˜[01m[Krapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::[01;32m[KIterativeParse[m[K(InputStream&, Handler&) [35m[K[with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/reader.h:487:46:[m[K   required from â€˜[01m[Krapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::[01;32m[KParse[m[K(InputStream&, Handler&) [35m[K[with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2159:57:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KParseStream[m[K(InputStream&) [35m[K[with unsigned int parseFlags = 0; SourceEncoding = rapidjson::UTF8<>; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2224:55:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KParse[m[K(const typename SourceEncoding::Ch*) [35m[K[with unsigned int parseFlags = 0; SourceEncoding = rapidjson::UTF8<>; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; typename SourceEncoding::Ch = char][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2233:43:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KParse[m[K(const Ch*) [35m[K[with unsigned int parseFlags = 0; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; Ch = char][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2240:41:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KParse[m[K(const Ch*) [35m[K[with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; Ch = char][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/remote.cpp:76:16:[m[K   required from here
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:1952:24:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid*[01;32m[K memcpy[m[K(void*, const void*, size_t)[m[Kâ€™ writing to an object of type â€˜[01m[Krapidjson::GenericValue<rapidjson::UTF8<> >::Member[m[Kâ€™ {aka â€˜[01m[Kstruct rapidjson::GenericMember<rapidjson::UTF8<>, rapidjson::MemoryPoolAllocator<> >[m[Kâ€™} with no trivial copy-assignment; use copy-assignment instead [[01;35m[K-Wclass-memaccess[m[K]
 1952 |             [01;35m[Kstd::memcpy(m, members, count * sizeof(Member))[m[K;
      |             [01;35m[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:71:8:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Krapidjson::GenericValue<rapidjson::UTF8<> >::Member[m[Kâ€™ {aka â€˜[01m[Kstruct rapidjson::GenericMember<rapidjson::UTF8<>, rapidjson::MemoryPoolAllocator<> >[m[Kâ€™} declared here
   71 | struct [01;36m[KGenericMember[m[K {
      |        [01;36m[K^~~~~~~~~~~~~[m[K
/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h: In instantiation of â€˜[01m[Kvoid rapidjson::GenericValue<Encoding, Allocator>::[01;32m[KSetArrayRaw[m[K(rapidjson::GenericValue<Encoding, Allocator>*, rapidjson::SizeType, Allocator&) [35m[K[with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int][m[K[m[Kâ€™:
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2371:54:[m[K   required from â€˜[01m[Kbool rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KEndArray[m[K(rapidjson::SizeType) [35m[K[with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; rapidjson::SizeType = unsigned int][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/reader.h:1766:39:[m[K   required from â€˜[01m[Krapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::IterativeParsingState rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::[01;32m[KTransit[m[K(IterativeParsingState, Token, IterativeParsingState, InputStream&, Handler&) [35m[K[with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/reader.h:1832:58:[m[K   required from â€˜[01m[Krapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::[01;32m[KIterativeParse[m[K(InputStream&, Handler&) [35m[K[with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/reader.h:487:46:[m[K   required from â€˜[01m[Krapidjson::ParseResult rapidjson::GenericReader<SourceEncoding, TargetEncoding, StackAllocator>::[01;32m[KParse[m[K(InputStream&, Handler&) [35m[K[with unsigned int parseFlags = 0; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; SourceEncoding = rapidjson::UTF8<>; TargetEncoding = rapidjson::UTF8<>; StackAllocator = rapidjson::CrtAllocator][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2159:57:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KParseStream[m[K(InputStream&) [35m[K[with unsigned int parseFlags = 0; SourceEncoding = rapidjson::UTF8<>; InputStream = rapidjson::GenericStringStream<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2224:55:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KParse[m[K(const typename SourceEncoding::Ch*) [35m[K[with unsigned int parseFlags = 0; SourceEncoding = rapidjson::UTF8<>; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; typename SourceEncoding::Ch = char][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2233:43:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KParse[m[K(const Ch*) [35m[K[with unsigned int parseFlags = 0; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; Ch = char][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:2240:41:[m[K   required from â€˜[01m[Krapidjson::GenericDocument<Encoding, Allocator, StackAllocator>& rapidjson::GenericDocument<Encoding, Allocator, StackAllocator>::[01;32m[KParse[m[K(const Ch*) [35m[K[with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; StackAllocator = rapidjson::CrtAllocator; Ch = char][m[K[m[Kâ€™
[01m[K/workspace/ros_ws/src/lakibeam1/src/remote.cpp:76:16:[m[K   required from here
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:1939:24:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid*[01;32m[K memcpy[m[K(void*, const void*, size_t)[m[Kâ€™ writing to an object of type â€˜[01m[Kclass rapidjson::GenericValue<rapidjson::UTF8<> >[m[Kâ€™ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [[01;35m[K-Wclass-memaccess[m[K]
 1939 |             [01;35m[Kstd::memcpy(e, values, count * sizeof(GenericValue))[m[K;
      |             [01;35m[K~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/workspace/ros_ws/src/lakibeam1/src/../thirdparty/rapidjson/document.h:540:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kclass rapidjson::GenericValue<rapidjson::UTF8<> >[m[Kâ€™ declared here
  540 | class [01;36m[KGenericValue[m[K {
      |       [01;36m[K^~~~~~~~~~~~[m[K
