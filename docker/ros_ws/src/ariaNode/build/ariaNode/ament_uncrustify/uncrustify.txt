-- run_test.py: invoking following command in '/workspace/ros_ws/src/ariaNode':
 - /opt/ros/jazzy/bin/ament_uncrustify --xunit-file /workspace/ros_ws/src/ariaNode/build/ariaNode/test_results/ariaNode/uncrustify.xunit.xml

Code style divergence in file 'src/ariaNode.cpp':

--- src/ariaNode.cpp
+++ src/ariaNode.cpp.uncrustify
@@ -1 +1 @@
-/*  
+/*
@@ -32,4 +32,6 @@
-    public:
-        ariaNode(float* forwardSpeed, float* rotationSpeed) : Node("Aria_node") {
-            currentForwardSpeed = forwardSpeed;
-            currentRotationSpeed = rotationSpeed;
+public:
+  ariaNode(float * forwardSpeed, float * rotationSpeed)
+  : Node("Aria_node")
+  {
+    currentForwardSpeed = forwardSpeed;
+    currentRotationSpeed = rotationSpeed;
@@ -37 +39 @@
-            cmdVelSub = create_subscription<geometry_msgs::msg::Twist> (
+    cmdVelSub = create_subscription<geometry_msgs::msg::Twist>(
@@ -39,2 +41,2 @@
-            );    
-        }
+    );
+  }
@@ -42,5 +44,3 @@
-    private:
-        void cmdVelCallback(const geometry_msgs::msg::Twist::SharedPtr msg) {
-            
-            double linearSpeed = msg->linear.x;
-            double angularSpeed = msg->angular.z;
+private:
+  void cmdVelCallback(const geometry_msgs::msg::Twist::SharedPtr msg)
+  {
@@ -48,2 +48,2 @@
-            *currentForwardSpeed = linearSpeed;
-            *currentRotationSpeed = angularSpeed;
+    double linearSpeed = msg->linear.x;
+    double angularSpeed = msg->angular.z;
@@ -51 +51,2 @@
-            RCLCPP_DEBUG(this->get_logger(), "message received.");
+    *currentForwardSpeed = linearSpeed;
+    *currentRotationSpeed = angularSpeed;
@@ -53 +54 @@
-        }
+    RCLCPP_DEBUG(this->get_logger(), "message received.");
@@ -55,4 +56,6 @@
-        rclcpp::Subscription<geometry_msgs::msg::Twist>::SharedPtr cmdVelSub;
-        float* currentForwardSpeed;
-        float* currentRotationSpeed;
-    
+  }
+
+  rclcpp::Subscription<geometry_msgs::msg::Twist>::SharedPtr cmdVelSub;
+  float * currentForwardSpeed;
+  float * currentRotationSpeed;
+
@@ -62,3 +65,4 @@
-void my_handler(int s){
-           printf("Caught signal %d\n",s);
-           stopRunning = true;
+void my_handler(int s)
+{
+  printf("Caught signal %d\n", s);
+  stopRunning = true;
@@ -67,2 +71,3 @@
-int main(int argc, char** argv) {
-    rclcpp::init(argc, argv);
+int main(int argc, char ** argv)
+{
+  rclcpp::init(argc, argv);
@@ -70,5 +75,5 @@
-    Aria::init();
-    ArArgumentParser parser(&argc, argv);
-    parser.loadDefaultArguments();
-    ArRobot* robot;
-    robot = new ArRobot();
+  Aria::init();
+  ArArgumentParser parser(&argc, argv);
+  parser.loadDefaultArguments();
+  ArRobot * robot;
+  robot = new ArRobot();
@@ -76,2 +81,2 @@
-    signal(SIGINT, my_handler);
-    
+  signal(SIGINT, my_handler);
+
@@ -79,7 +84,6 @@
-    ArRobotConnector robotConnector(&parser, robot);
-    if(!robotConnector.connectRobot()) {
-        ArLog::log(ArLog::Terse, "simpleConnect: Could not connect to the robot.");
-        if(parser.checkHelpAndWarnUnparsed()) {
-            Aria::logOptions();
-            Aria::exit(1);
-        }
+  ArRobotConnector robotConnector(&parser, robot);
+  if(!robotConnector.connectRobot()) {
+    ArLog::log(ArLog::Terse, "simpleConnect: Could not connect to the robot.");
+    if(parser.checkHelpAndWarnUnparsed()) {
+      Aria::logOptions();
+      Aria::exit(1);
@@ -86,0 +91 @@
+  }
@@ -88 +93 @@
-    robot->setAbsoluteMaxTransVel(400);
+  robot->setAbsoluteMaxTransVel(400);
@@ -90,4 +95,4 @@
-    float forwardSpeed = 0.0;
-    float rotationSpeed = 0.0;
-    
-    
+  float forwardSpeed = 0.0;
+  float rotationSpeed = 0.0;
+
+
@@ -95 +100 @@
-    robot->runAsync(true);
+  robot->runAsync(true);
@@ -97 +102 @@
-    robot->enableMotors();
+  robot->enableMotors();
@@ -99,2 +104,2 @@
-    auto aNode = std::make_shared<ariaNode>(&forwardSpeed, &rotationSpeed);
-    RCLCPP_DEBUG(aNode->get_logger(),"Before Spin!...");
+  auto aNode = std::make_shared<ariaNode>(&forwardSpeed, &rotationSpeed);
+  RCLCPP_DEBUG(aNode->get_logger(), "Before Spin!...");
@@ -104 +109 @@
-     *   that continuously spins the node to update velocities which are 
+     *   that continuously spins the node to update velocities which are
@@ -107,2 +112,2 @@
-    while (!stopRunning) {
-        rclcpp::spin_some(aNode);
+  while (!stopRunning) {
+    rclcpp::spin_some(aNode);
@@ -110,4 +115,4 @@
-            robot->lock();
-            robot->setVel(forwardSpeed * 500);
-            robot->setRotVel(rotationSpeed * 50);
-            robot->unlock();
+    robot->lock();
+    robot->setVel(forwardSpeed * 500);
+    robot->setRotVel(rotationSpeed * 50);
+    robot->unlock();
@@ -117,2 +122,2 @@
-    }
-    RCLCPP_DEBUG(aNode->get_logger(), "After Spin");
+  }
+  RCLCPP_DEBUG(aNode->get_logger(), "After Spin");
@@ -120,2 +125,2 @@
-    robot->disableMotors();
-    robot->stopRunning();
+  robot->disableMotors();
+  robot->stopRunning();
@@ -123 +128 @@
-    robot->waitForRunExit();
+  robot->waitForRunExit();
@@ -126,4 +131,4 @@
-    RCLCPP_DEBUG(aNode->get_logger(), "ending Aria node");
-    Aria::exit(0);
-    return 0;
-}
+  RCLCPP_DEBUG(aNode->get_logger(), "ending Aria node");
+  Aria::exit(0);
+  return 0;
+}

1 files with code style divergence


-- run_test.py: return code 1
-- run_test.py: verify result file '/workspace/ros_ws/src/ariaNode/build/ariaNode/test_results/ariaNode/uncrustify.xunit.xml'
