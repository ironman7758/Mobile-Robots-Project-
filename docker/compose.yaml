services:
  master:
    image: mobrobproject:v3 #Name of the image
    container_name: master #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: /bin/bash #ros2 run joy joy_node #&& ros2 run teleop_twist_joy teleop_node
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    #- 'c 4:* rmw'

  joycon:
    image: mobrobproject:v3 #Name of the image
    container_name: joycon #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: ros2 run joy joy_node #&& ros2 run teleop_twist_joy teleop_node
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    #- 'c 4:* rmw'

  Twister:
    image: mobrobproject:v3 #Name of the image
    container_name: twist #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: ros2 launch teleop_twist_joy teleop-launch.py joy_config:='ps4' joy_vel:="joy_vel"
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    #- 'c 4:* rmw'

  lidar:
    image: mobrobproject:v3 #Name of the image
    container_name: lidar #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: #ros2 launch lakibeam1 lakibeam1_scan.launch.py
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    - 'c 166:* rmw'
    #- 'c 4:* rmw'

  slam:
    image: mobrobproject:v3 #Name of the image
    container_name: slam #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: #ros2 launch slam_toolbox online_async_launch.py map_file_name:='/opt/ros/jazzy/share/turtlebot3_navigation2/map/map.yaml' #ros2 launch robot_localization navsat_transform.launch.py #&& ros2 run teleop_twist_joy teleop_node
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    - 'c 166:* rmw'
    #- 'c 4:* rmw'
  
  gps:
    image: mobrobproject:v3 #Name of the image
    container_name: gps #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: ros2 launch nmea_navsat_driver nmea_serial_driver.launch.py #ros2 launch robot_localization navsat_transform.launch.py #&& ros2 run teleop_twist_joy teleop_node
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    - 'c 166:* rmw'
    #- 'c 4:* rmw'

  imu:
    image: mobrobproject:v3 #Name of the image
    container_name: imu #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: ros2 launch phidgets_spatial spatial-launch.py #ros2 launch robot_localization navsat_transform.launch.py #&& ros2 run teleop_twist_joy teleop_node
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    #- 'c 4:* rmw'

  localize:
    image: mobrobproject:v3 #Name of the image
    container_name: localize #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: #ros2 launch robot_localization navsat_transform.launch.py #ros2 launch robot_localization navsat_transform.launch.py #&& ros2 run teleop_twist_joy teleop_node
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    - 'c 166:* rmw'
    #- 'c 4:* rmw'

  camera:
    image: mobrobproject:v3 #Name of the image
    container_name: camera #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: ros2 run depthai_ros_driver camera_node #ros2 launch robot_localization navsat_transform.launch.py #&& ros2 run teleop_twist_joy teleop_node
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    #- 'c 4:* rmw'

  Nav2:
    image: mobrobproject:v3 #Name of the image
    container_name: nav2 #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: #ros2 launch nav2_bringup navigation_launch.py use_sim_time:='False' slam:='True' use_rviz:='True' world:='ros_ws/world/empty.sdf'  #&& ros2 run teleop_twist_joy teleop_node
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    #- 'c 4:* rmw'

  Aria:
    image: mobrobproject:v3 #Name of the image
    container_name: Aria #Name of the container
    network_mode: host
    #devices: [ "dev/ttyUSB0:/dev/ttyUSB0" ]
    tty: True
    stdin_open: True
    #This container open to run this node
    command: #ros2 run ariaNode ariaNode -rp /dev/ttyUSB0
    #The volumes here (Specifically 'bind') mount existing folders to the container
    volumes:
    - type: bind
      source: /dev
      target: /dev
    - type: bind
      source: ./ros_ws
      target: /workspace/ros_ws
    - type: bind
      source: ./configs
      target: /workspace/configs
    - type: bind
      source: /tmp/.X11-unix
      target: /tmp/.X11-unix
    - type: bind
      source: /dev/dri
      target: /dev/dri
    #cgroup rules allow devices to be passed into the container
    device_cgroup_rules:
    - 'c 188:* rmw'
    - 'c 189:* rmw'
    - 'c 13:* rmw'
    #- 'c 4:* rmw'